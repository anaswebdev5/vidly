{"version":3,"sources":["services/fakeGenreService.js","services/fakeMovieService.js","components/common/Pagination.jsx","utils/paginate.js","components/common/ListGroup.jsx","components/common/Like.jsx","components/common/TableHeader.jsx","components/common/TableBody.jsx","components/common/Table.jsx","components/MoviesTable.jsx","components/Movies.jsx","App.js","serviceWorker.js","index.js"],"names":["genres","_id","name","movies","title","genre","numberInStock","dailyRentalRate","publishDate","liked","Pagination","pageSize","itemsCount","onPageChange","currentPage","pagesCount","Math","ceil","pages","_","range","className","map","page","style","cursor","key","onClick","paginate","items","pageNumber","startIndex","slice","take","value","ListGroup","textProperty","valueProperty","onItemSelect","selectedItem","item","defaultProps","Like","classes","aria-hidden","TableHeader","raiseSort","path","sortColumn","props","order","onSort","renderSortIcon","column","columns","this","label","Component","TableBody","renderCell","content","get","createKey","data","Table","MoviesTable","movie","onLike","onDelete","Movies","state","selectedGenre","handleDelete","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","handleSort","getPagedData","allMovies","filtered","orderBy","totalCount","length","g","count","App","role","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e41022d5.chunk.js","sourcesContent":["export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n];\n\nexport function getGenres() {\n  return genres.filter((g) => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: true\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.title = movie.title;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now().toString();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = ({ pageSize, itemsCount, onPageChange, currentPage }) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            style={{ cursor: \"pointer\" }}\r\n            key={page}\r\n            className={currentPage === page ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <span className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst ListGroup = ({\r\n  items,\r\n  textProperty,\r\n  valueProperty,\r\n  onItemSelect,\r\n  selectedItem,\r\n}) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          onClick={() => onItemSelect(item)}\r\n          style={{ cursor: \"pointer\" }}\r\n          className={\r\n            selectedItem === item ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n          key={item[valueProperty]}\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\",\r\n};\r\nexport default ListGroup;\r\n","import React from \"react\";\r\n\r\nconst Like = ({ liked, onClick }) => {\r\n  let classes = \"fa fa-heart\";\r\n  if (!liked) classes += \"-o\";\r\n  return (\r\n    <i\r\n      onClick={onClick}\r\n      style={{ cursor: \"pointer\" }}\r\n      className={classes}\r\n      aria-hidden=\"true\"\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = (column) => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n\r\n  render() {\r\n    const { columns } = this.props;\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {columns.map((column) => (\r\n            <th\r\n              style={{ cursor: \"pointer\" }}\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n  render() {\r\n    const { data, columns } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./TableHeader\";\r\nimport TableBody from \"./TableBody\";\r\n\r\nconst Table = ({ columns, data, onSort, sortColumn }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} onSort={onSort} sortColumn={sortColumn} />\r\n      <TableBody data={data} columns={columns} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport Like from \"./common/Like\";\r\nimport Table from \"./common/Table\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    { path: \"title\", label: \"Title\" },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: (movie) => (\r\n        <Like onClick={() => this.props.onLike(movie)} liked={movie.liked} />\r\n      ),\r\n    },\r\n    {\r\n      key: \"delete\",\r\n      content: (movie) => (\r\n        <button\r\n          className=\"btn btn-danger btn-sm\"\r\n          onClick={() => this.props.onDelete(movie)}\r\n        >\r\n          Delete\r\n        </button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        onSort={onSort}\r\n        sortColumn={sortColumn}\r\n        data={movies}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React, { Component } from \"react\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport _ from \"lodash\";\r\nimport Pagination from \"./common/Pagination\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport ListGroup from \"./common/ListGroup\";\r\nimport MoviesTable from \"./MoviesTable\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    genres: [],\r\n    selectedGenre: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n\r\n  componentDidMount() {\r\n    const movies = getMovies();\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\r\n    this.setState({\r\n      movies,\r\n      genres,\r\n    });\r\n  }\r\n\r\n  handleDelete = (movie) => {\r\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = (genre) => {\r\n    this.setState({ selectedGenre: genre, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      movies: allMovies,\r\n      selectedGenre,\r\n      sortColumn,\r\n    } = this.state;\r\n    let filtered = allMovies;\r\n\r\n    if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\r\n    const sorted = _.orderBy(filtered, sortColumn.path, sortColumn.order);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      genres,\r\n      selectedGenre,\r\n      sortColumn,\r\n    } = this.state;\r\n\r\n    if (count === 0) return <b>There is no movies in database</b>;\r\n    const { totalCount, movies } = this.getPagedData();\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={genres}\r\n            selectedItem={selectedGenre}\r\n            onItemSelect={this.handleGenreSelect}\r\n          ></ListGroup>\r\n        </div>\r\n        <div className=\"col\">\r\n          <b>Showing {totalCount} movies from database.</b>\r\n          <MoviesTable\r\n            sortColumn={sortColumn}\r\n            movies={movies}\r\n            onDelete={this.handleDelete}\r\n            onLike={this.handleLike}\r\n            onSort={this.handleSort}\r\n          />\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            onPageChange={this.handlePageChange}\r\n            currentPage={currentPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Movies from \"./components/Movies\";\n\nclass App extends Component {\n  render() {\n    return (\n      <main role=\"main\" className=\"container\">\n        <Movies />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}